{"ast":null,"code":"import { inject } from '@angular/core';\nimport { BehaviorSubject, map } from 'rxjs';\nimport { InMemoryDataService } from '../data/in-memory-data.service';\nimport * as i0 from \"@angular/core\";\nexport let ActivityStateService = /*#__PURE__*/(() => {\n  class ActivityStateService {\n    inMemory = inject(InMemoryDataService);\n    search$ = new BehaviorSubject('');\n    activities$ = this.inMemory.getActivities().pipe(map(activities => activities.slice().sort((a, b) => a.fecha.localeCompare(b.fecha)).filter(activity => this.search$.value ? activity.asunto.toLowerCase().includes(this.search$.value.toLowerCase()) : true)));\n    setSearch(value) {\n      this.search$.next(value);\n    }\n    complete(id) {\n      this.inMemory.completeActivity(id).subscribe();\n    }\n    static ɵfac = function ActivityStateService_Factory(t) {\n      return new (t || ActivityStateService)();\n    };\n    static ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: ActivityStateService,\n      factory: ActivityStateService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return ActivityStateService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}